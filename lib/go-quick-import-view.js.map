{"version":3,"sources":["../src/go-quick-import-view.js"],"names":[],"mappings":"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","file":"go-quick-import-view.js","sourcesContent":["/*@flow*/\nimport \"babel-polyfill\";\nimport { SelectListView } from \"atom-space-pen-views\";\nimport listPackages from \"./package-lister\";\nimport { AddImport, RemoveImport, ListImports } from \"./modimport\";\nimport { partition, indexBy } from \"lodash\";\n\nfunction pathAliases(): Object {\n  var vals: Array<string> = atom.config.get(\"go-quick-import.importNames\")\n  var paths = {};\n  vals.forEach(val=>{\n    var parts = val.split(\" \");\n    if (parts.length !== 2) return;\n    paths[parts[1]] = parts[0];\n  });\n  return paths;\n}\n\nexport default class GoQuickImportView extends SelectListView {\n  constructor() {\n    super()\n    this.addClass(\"overlay from-top\")\n    this.modalPanel = atom.workspace.addModalPanel({item:this, visible: false});\n    this.visible = false;\n    this.setMaxItems(100);\n  }\n  destroy() {\n    this.packageLister.kill();\n    this.modalPanel.destroy();\n    super.destroy();\n  }\n\n  async updateItems(): Promise {\n    if (!this.visible) return;\n    var doList = listPackages();\n    var imports = ListImports(atom.workspace.getActiveTextEditor().getText());\n    imports = indexBy(imports, \"Path\");\n    var parts = partition(await doList, pkg=>imports[pkg]);\n    var items = parts[0].map(pkg=>({Remove: true, Path: pkg, Label: `delete: ${imports[pkg].Name} ( ${pkg} )`}));\n    items = items.concat(parts[1].map(pkg=>({Path: pkg, Label: `${pkg}`})));\n    this.setItems(items);\n    this.focusFilterEditor();\n  }\n  async show(): Promise {\n    this.visible = true;\n    await this.updateItems();\n    if (!this.visible) return;\n    this.modalPanel.show();\n    this.focusFilterEditor();\n  }\n  hide() {\n    this.visible = false;\n    this.modalPanel.hide();\n  }\n  getFilterKey(): string {\n    return \"Label\";\n  }\n  viewForItem(item: Object): string {\n    return item.Remove\n      ? `<li class=\"go-quick-import remove\">${item.Label}</li>`\n      : `<li class=\"go-quick-import\">${item.Label}</li>`;\n  }\n  cancelled() {\n    this.hide();\n    atom.views.getView(atom.workspace.getActiveTextEditor()).focus();\n  }\n  confirmed(item: Object) {\n    var editor = atom.workspace.getActiveTextEditor();\n    var origSource: string = editor.getText();\n    var res;\n    if (item.Remove) {\n      res = RemoveImport(origSource, item.Path);\n    } else {\n      res = AddImport(origSource, item.Path, pathAliases()[item.Path] || \"\");\n    }\n    var newHeader = res[0];\n    var headerLen = res[1];\n\n    var oldHeader = origSource.slice(0, headerLen)\n    var rows = oldHeader.split(\"\\n\").length-1;\n\n    editor.setTextInBufferRange([[0,0], [rows, 0]], newHeader);\n    var editorEl = atom.views.getView(editor);\n    this.hide();\n    editorEl.focus();\n  }\n}\n"]}