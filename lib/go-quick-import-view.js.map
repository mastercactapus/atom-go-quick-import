{"version":3,"sources":["../src/go-quick-import-view.js"],"names":[],"mappings":"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","file":"go-quick-import-view.js","sourcesContent":["/*@flow*/\nimport \"babel-polyfill\";\nimport { SelectListView } from \"atom-space-pen-views\";\nimport listPackages from \"./package-lister\";\nimport { AddImport, RemoveImport, ListImports, Header } from \"./modimport\";\nimport { partition, indexBy } from \"lodash\";\n\nfunction pathAliases(): Object {\n  var vals: Array<string> = atom.config.get(\"go-quick-import.importNames\")\n  var paths = {};\n  vals.forEach(val=>{\n    var parts = val.split(\" \");\n    if (parts.length !== 2) return;\n    paths[parts[1]] = parts[0];\n  });\n  return paths;\n}\n\nexport default class GoQuickImportView extends SelectListView {\n  constructor() {\n    super()\n    this.addClass(\"overlay from-top\")\n    this.modalPanel = atom.workspace.addModalPanel({item:this, visible: false});\n    this.visible = false;\n    this.setMaxItems(100);\n  }\n  destroy() {\n    this.packageLister.kill();\n    this.modalPanel.destroy();\n    super.destroy();\n  }\n\n  async updateItems(): Promise {\n    if (!this.visible) return;\n    var doList = listPackages();\n    var imports = ListImports(atom.workspace.getActiveTextEditor().getText());\n    imports = indexBy(imports, \"Path\");\n    var parts = partition(await doList, pkg=>imports[pkg]);\n    var items = parts[0].map(pkg=>({Remove: true, Path: pkg, Label: `delete: ${imports[pkg].Name} ( ${pkg} )`}));\n    items = items.concat(parts[1].map(pkg=>({Path: pkg, Label: `${pkg}`})));\n    this.setItems(items);\n    this.focusFilterEditor();\n  }\n  async show(): Promise {\n    this.visible = true;\n    await this.updateItems();\n    if (!this.visible) return;\n    this.modalPanel.show();\n    this.focusFilterEditor();\n  }\n  hide() {\n    this.visible = false;\n    this.modalPanel.hide();\n  }\n  getFilterKey(): string {\n    return \"Label\";\n  }\n  viewForItem(item: Object): string {\n    return item.Remove\n      ? `<li class=\"go-quick-import remove\">${item.Label}</li>`\n      : `<li class=\"go-quick-import\">${item.Label}</li>`;\n  }\n  cancelled() {\n    this.hide();\n    atom.views.getView(atom.workspace.getActiveTextEditor()).focus();\n  }\n  confirmed(item: Object) {\n    var editor = atom.workspace.getActiveTextEditor();\n    var oldText: string = editor.getText();\n    var oldHeader: string = Header(editor.getText())[0];\n    var newHeader: string;\n    if (item.Remove) {\n      newHeader = RemoveImport(oldHeader, item.Path);\n    } else {\n      newHeader = AddImport(oldHeader, item.Path, pathAliases()[item.Path] || \"\");\n    }\n    var oldLines = oldHeader.split(\"\\n\").length;\n    editor.setTextInBufferRange([[0,0], [oldLines-1, 0]], newHeader);\n    var editorEl = atom.views.getView(editor);\n    this.hide();\n    editorEl.focus();\n  }\n}\n"]}